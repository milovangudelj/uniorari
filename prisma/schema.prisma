// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
   provider = "postgresql"
   url      = env("DATABASE_URL")
}

generator client {
   provider = "prisma-client-js"
}

generator nexusPrisma {
   provider = "nexus-prisma"
}

model Scuola {
   // Scalars
   id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
   createdAt DateTime @default(now())
   updatedAt DateTime @default(now()) @updatedAt

   nome       String @unique
   presidente String
   sede       String
   sito       String
   telefono   String
   email      String

   // Relations
   dipartimenti Dipartimento[]

   @@map("scuole")
}

model Dipartimento {
   // Scalars
   id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
   createdAt DateTime @default(now())
   updatedAt DateTime @default(now()) @updatedAt

   nome      String @unique
   acronimo  String @unique
   direttore String
   sede      String
   sito      String
   telefono  String
   email     String

   // Relations
   idScuola String   @db.Uuid
   scuola   Scuola   @relation(fields: [idScuola], references: [id])
   lauree   Laurea[]

   @@map("dipartimenti")
}

model Laurea {
   // Scalars
   id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
   createdAt DateTime @default(now())
   updatedAt DateTime @default(now()) @updatedAt

   codice     String @unique
   nome       String @unique
   presidente String
   email      String

   // Relations
   idDipartimento String         @db.Uuid
   dipartimento   Dipartimento   @relation(fields: [idDipartimento], references: [id])
   insegnamenti   Insegnamento[]

   @@map("lauree")
}

model Insegnamento {
   // Scalars
   id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
   createdAt DateTime @default(now())
   updatedAt DateTime @default(now()) @updatedAt

   nome         String  @unique
   obbligatorio Boolean
   cfu          Int
   adc          Int
   semestre     Int
   lingua       String
   curriculum   String

   // Relations
   lauree Laurea[]
   corsi  Corso[]

   @@map("insegnamenti")
}

model Corso {
   // Scalars
   id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
   createdAt DateTime @default(now())
   updatedAt DateTime @default(now()) @updatedAt

   nome   String @unique
   moodle String

   // Relations
   idInsegnamento String       @db.Uuid
   insegnamento   Insegnamento @relation(fields: [idInsegnamento], references: [id])
   idCanale       String       @db.Uuid
   canale         Canale       @relation(fields: [idCanale], references: [id])
   idResponsabile String       @unique @db.Uuid
   responsabile   Docente      @relation(name: "responsabile", fields: [idResponsabile], references: [id])
   docenti        Docente[]    @relation(name: "docenti")
   studenti       Profilo[]

   @@map("corsi")
}

model Canale {
   // Scalars
   id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
   createdAt DateTime @default(now())
   updatedAt DateTime @default(now()) @updatedAt

   nome String @unique

   // Relations
   corsi Corso[]

   @@map("canali")
}

model Docente {
   // Scalars
   id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
   createdAt DateTime @default(now())
   updatedAt DateTime @default(now()) @updatedAt

   nome    String
   cognome String
   email   String @unique

   // Relations
   corsi          Corso[]   @relation(name: "docenti")
   responsabileDi Corso?    @relation(name: "responsabile")
   lezioni        Lezione[]

   @@map("docenti")
}

model Lezione {
   // Scalars
   id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
   createdAt DateTime @default(now())
   updatedAt DateTime @default(now()) @updatedAt

   giorno Int
   inizio String
   fine   String
   durata Int

   // Relations
   docenti Docente[]
   aule    Aula[]

   @@map("lezioni")
}

model Aula {
   // Scalars
   id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
   createdAt DateTime @default(now())
   updatedAt DateTime @default(now()) @updatedAt

   nome      String  @unique
   indirizzo String?
   link      String?

   // Relations
   lezioni Lezione[]

   @@map("aule")
}

model Profilo {
   // Scalars
   id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
   createdAt DateTime @default(now())
   updatedAt DateTime @default(now()) @updatedAt

   nome     String
   email    String  @unique
   username String  @unique
   immagine String?

   // Relations
   corsi Corso[]

   @@map("profili")
}
