// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["dataProxy"]
}

// generator nexusPrisma {
//   provider = "nexus-prisma"
// }

model Docente {
  // Scalars
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  nome      String
  cognome   String?
  email     String?  @unique

  // Relations
  corsi   Corso[]
  gruppi  Gruppo[]
  lezioni Lezione[]

  @@map("docenti")
}

model Corso {
  // Scalars
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  nome      String

  // Relations
  docenti  Docente[]
  lauree   Laurea[]
  gruppi   Gruppo[]
  studenti Profile[]

  @@map("corsi")
}

model Gruppo {
  // Scalars
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  nome      String
  adc       Int?

  // Relations
  docenti  Docente[]
  idLaurea String
  laurea   Laurea    @relation(fields: [idLaurea], references: [id])
  corsi    Corso[]
  lezioni  Lezione[]

  @@map("gruppi")
}

model Laurea {
  // Scalars
  id        String   @id @default(dbgenerated("uuid_generate_v4()"))
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  nome      String
  scuola    String

  // Relations
  corsi  Corso[]
  gruppi Gruppo[]

  @@map("lauree")
}

model Lezione {
  // Scalars
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  giorno    Int
  ora       Int
  inizio    String
  fine      String
  durata    Int

  // Relations
  docenti Docente[]
  gruppi  Gruppo[]
  aule    Aula[]

  @@map("lezioni")
}

model Aula {
  // Scalars
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  nome      String
  indirizzo String?
  link      String?

  // Relations
  lezioni Lezione[]

  @@map("aule")
}

/// User data model
model Profile {
  id        String   @id @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  name      String?
  email     String?  @unique
  username  String?  @unique
  image     String?
  corsi     Corso[]

  @@map("profiles")
}
